<body>
Enter your email, followed by your new information: <br />
<form action="/api/users" id="putForm">
    email: <input name="email"/>
    <br />
    Name: <input name="name"/>
    <br />
    graduation date: <input name="dateOfGraduation"/>
    <br />
    review: <input name="bio"/>
    <button type="submit">Update User</button>
</form>

<script>
    //functuon provided by https://stackoverflow.com/questions/7542586/new-formdata-application-x-www-form-urlencoded
    function urlencodeFormData(fd){
    var s = '';
    function encode(s){ return encodeURIComponent(s).replace(/%20/g,'+'); }
    for(var pair of fd.entries()){
        if(typeof pair[1]=='string'){
            s += (s?'&':'') + encode(pair[0])+'='+encode(pair[1]);
        }
    }
    return s;
}
    //Modified example from https://developer.mozilla.org/en-US/docs/Learn/Forms/Sending_forms_through_JavaScript
    window.addEventListener( "load", function () {
  function sendData() {
    const XHR = new XMLHttpRequest();

    // Bind the FormData object and the form element
    const FD = urlencodeFormData(new FormData( form ));

    // Define what happens on successful data submission
    XHR.addEventListener( "load", function(event) {
      document.body= event.target.responseText;
    } );

    // Define what happens in case of error
    XHR.addEventListener( "error", function( event ) {
      alert( 'Oops! Something went wrong.' );
    } );

    // Set up our request
    XHR.open( "PUT", "api/users/" );

    // The data sent is what the user provided in the form
    XHR.send( FD );
  }
 
  // Access the form element...
  let form = document.getElementById( "putForm" );

  // ...and take over its submit event.
  form.addEventListener( "submit", function ( event ) {
    event.preventDefault();

    sendData();
  } );
} );
</script>
</body>